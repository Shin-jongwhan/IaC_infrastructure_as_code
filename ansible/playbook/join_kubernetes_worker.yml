# contole plane node에서 --print-join-command로 token 등의 정보를 얻는다.
# 그리고 cri_socket은 설정한 container runtime socket 경로로 넣는다.
# 그 다음 각 node에서 kubeadm join 명령어를 실행한다.
---
- name: Get kubeadm join command on control plane
  hosts: service
  gather_facts: no
  vars:
    cri_socket: "/var/run/cri-dockerd.sock"

  tasks:
    - name: Create kubeadm join command
      command: kubeadm token create --print-join-command --ttl 0
      register: join_command_raw

    - name: Set join command as fact
      set_fact:
        join_command: "{{ join_command_raw.stdout }}"

    - name: Print join command
      debug:
        msg: "{{ join_command }}"

- name: Join worker nodes to Kubernetes cluster
  hosts: db:backend
  become: yes
  vars:
    cri_socket: "/var/run/cri-dockerd.sock"

  tasks:
    - name: Disable swap
      shell: |
        swapoff -a
        sed -i '/ swap / s/^/#/' /etc/fstab

    - name: Run kubeadm join with cri-socket
      shell: "{{ hostvars['tgf-service']['join_command'] }} --cri-socket {{ cri_socket }}"
      args:
        creates: /etc/kubernetes/kubelet.conf
